; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\build\board.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\board.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -Iapplications -I. -Idrivers -ILibraries\STM32F10x_StdPeriph_Driver\inc -ILibraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\components\CMSIS\Include -I..\..\include -I..\..\libcpu\arm\cortex-m3 -I..\..\libcpu\arm\common -I..\..\components\drivers\include -I..\..\components\drivers\include -I..\..\components\drivers\include -I..\..\components\drivers\include -I..\..\components\drivers\spi -I..\..\components\drivers\include -I..\..\components\drivers\include -I..\..\components\finsh -I..\..\components\libc\compilers\armlibc -I..\..\components\libc\compilers\common -IE:\00_snake.xiao\RT-Thread\rt-thread\bsp\stm32f10x\RTE\_rtthread-stm32 -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -ID:\Keil\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DSTM32F10X_HD -DSTM32F10X_HD -DRT_USING_ARM_LIBC -DUSE_STDPERIPH_DRIVER --omf_browse=.\build\board.crf drivers\board.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  NVIC_Configuration PROC
;;;32     *******************************************************************************/
;;;33     void NVIC_Configuration(void)
000000  b510              PUSH     {r4,lr}
;;;34     {
;;;35     #ifdef  VECT_TAB_RAM
;;;36         /* Set the Vector Table base location at 0x20000000 */
;;;37         NVIC_SetVectorTable(NVIC_VectTab_RAM, 0x0);
;;;38     #else  /* VECT_TAB_FLASH  */
;;;39         /* Set the Vector Table base location at 0x08000000 */
;;;40         NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0x0);
000002  2100              MOVS     r1,#0
000004  f04f6000          MOV      r0,#0x8000000
000008  f7fffffe          BL       NVIC_SetVectorTable
;;;41     #endif
;;;42     }
00000c  bd10              POP      {r4,pc}
;;;43     
                          ENDP

                  SysTick_Handler PROC
;;;153     */
;;;154    void SysTick_Handler(void)
00000e  b510              PUSH     {r4,lr}
;;;155    {
;;;156        /* enter interrupt */
;;;157        rt_interrupt_enter();
000010  f7fffffe          BL       rt_interrupt_enter
;;;158    
;;;159        rt_tick_increase();
000014  f7fffffe          BL       rt_tick_increase
;;;160    
;;;161        /* leave interrupt */
;;;162        rt_interrupt_leave();
000018  f7fffffe          BL       rt_interrupt_leave
;;;163    }
00001c  bd10              POP      {r4,pc}
;;;164    
                          ENDP

                  rt_hw_board_init PROC
;;;167     */
;;;168    void rt_hw_board_init(void)
00001e  b570              PUSH     {r4-r6,lr}
;;;169    {
;;;170        /* NVIC Configuration */
;;;171        NVIC_Configuration();
000020  f7fffffe          BL       NVIC_Configuration
;;;172    
;;;173        /* Configure the SysTick */
;;;174        SysTick_Config( SystemCoreClock / RT_TICK_PER_SECOND );
000024  4816              LDR      r0,|L1.128|
000026  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000028  2264              MOVS     r2,#0x64
00002a  fbb0f1f2          UDIV     r1,r0,r2
00002e  1e48              SUBS     r0,r1,#1
000030  f1b07f80          CMP      r0,#0x1000000
000034  d300              BCC      |L1.56|
000036  e01b              B        |L1.112|
                  |L1.56|
000038  1e48              SUBS     r0,r1,#1
00003a  f04f22e0          MOV      r2,#0xe000e000
00003e  6150              STR      r0,[r2,#0x14]
000040  1750              ASRS     r0,r2,#29
000042  220f              MOVS     r2,#0xf
000044  2800              CMP      r0,#0
000046  da07              BGE      |L1.88|
000048  0713              LSLS     r3,r2,#28
00004a  0e1d              LSRS     r5,r3,#24
00004c  4b0d              LDR      r3,|L1.132|
00004e  f000040f          AND      r4,r0,#0xf
000052  1f24              SUBS     r4,r4,#4
000054  551d              STRB     r5,[r3,r4]
000056  e003              B        |L1.96|
                  |L1.88|
000058  0713              LSLS     r3,r2,#28
00005a  0e1c              LSRS     r4,r3,#24
00005c  4b0a              LDR      r3,|L1.136|
00005e  541c              STRB     r4,[r3,r0]
                  |L1.96|
000060  bf00              NOP      
000062  2000              MOVS     r0,#0
000064  f04f22e0          MOV      r2,#0xe000e000
000068  6190              STR      r0,[r2,#0x18]
00006a  2007              MOVS     r0,#7
00006c  6110              STR      r0,[r2,#0x10]
00006e  bf00              NOP      
                  |L1.112|
;;;175    
;;;176    #if STM32_EXT_SRAM
;;;177        EXT_SRAM_Configuration();
;;;178    #endif
;;;179    
;;;180        rt_hw_usart_init();
000070  f7fffffe          BL       rt_hw_usart_init
;;;181        rt_console_set_device(RT_CONSOLE_DEVICE_NAME);
000074  a005              ADR      r0,|L1.140|
000076  f7fffffe          BL       rt_console_set_device
;;;182    
;;;183    #ifdef RT_USING_COMPONENTS_INIT
;;;184        rt_components_board_init();
00007a  f7fffffe          BL       rt_components_board_init
;;;185    #endif
;;;186    }
00007e  bd70              POP      {r4-r6,pc}
;;;187    
                          ENDP

                  |L1.128|
                          DCD      SystemCoreClock
                  |L1.132|
                          DCD      0xe000ed18
                  |L1.136|
                          DCD      0xe000e400
                  |L1.140|
00008c  75617274          DCB      "uart1",0
000090  3100    
000092  00                DCB      0
000093  00                DCB      0

;*** Start embedded assembler ***

#line 1 "drivers\\board.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_board_c_696cd8ce____REV16|
#line 129 "..\\..\\components\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_board_c_696cd8ce____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_board_c_696cd8ce____REVSH|
#line 144
|__asm___7_board_c_696cd8ce____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
